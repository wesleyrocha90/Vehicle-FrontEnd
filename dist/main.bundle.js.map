{"version":3,"sources":["C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/$_gendir lazy","C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/app/app.component.css","C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/app/app.component.html","C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/app/app.component.ts","C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/app/app.module.ts","C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/app/app.service.ts","C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/environments/environment.ts","C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    Welcome to Vehicles CRUD!\\r\\n  </h1>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"display: flex; flex-direction: row; justify-content: space-around;\\\">\\r\\n\\r\\n  <div style=\\\"flex-grow: 1; padding: 20px;\\\">\\r\\n    <div style=\\\"display: flex; flex-direction: row; justify-content: space-between;\\\">\\r\\n      <h2>VehicleType</h2>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#vehicleTypeModal\\\">Add VehicleType</button>\\r\\n    </div>\\r\\n    <div>\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">#</th>\\r\\n          <th scope=\\\"col\\\">Name</th>\\r\\n          <th scope=\\\"col\\\">Description</th>\\r\\n          <th></th>\\r\\n          <th></th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let vehicleType of vehicleTypes\\\">\\r\\n          <th scope=\\\"row\\\">{{vehicleType.id}}</th>\\r\\n          <td>{{vehicleType.name}}</td>\\r\\n          <td>{{vehicleType.description}}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"editVehicleType(vehicleType)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#vehicleTypeModal\\\">Edit</button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteVehicleType(vehicleType)\\\">Delete</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div style=\\\"flex-grow: 1; padding: 20px;\\\">\\r\\n    <div style=\\\"display: flex; flex-direction: row; justify-content: space-between;\\\">\\r\\n      <h2>Vehicle</h2>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#vehicleModal\\\">Add Vehicle</button>\\r\\n    </div>\\r\\n    <div>\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">#</th>\\r\\n          <th scope=\\\"col\\\">Name</th>\\r\\n          <th scope=\\\"col\\\">Description</th>\\r\\n          <th scope=\\\"col\\\">Plate</th>\\r\\n          <th scope=\\\"col\\\">VehicleType</th>\\r\\n          <th></th>\\r\\n          <th></th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let vehicle of vehicles\\\">\\r\\n          <th scope=\\\"row\\\">{{vehicle.id}}</th>\\r\\n          <td>{{vehicle.name}}</td>\\r\\n          <td>{{vehicle.description}}</td>\\r\\n          <td>{{vehicle.plate}}</td>\\r\\n          <td>{{vehicle.vehicleType?.name}}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"editVehicle(vehicle)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#vehicleModal\\\">Edit</button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteVehicle(vehicle)\\\">Delete</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- VehicleType Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"vehicleTypeModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"inputName\\\">Name</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"inputName\\\" name=\\\"inputName\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"vehicleType.name\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"inputDescription\\\">Description</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"inputDescription\\\" name=\\\"inputDescription\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"vehicleType.description\\\">\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"cancelVehicleType()\\\">Cancel</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=saveVehicleType(vehicleType)>Save</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Vehicle Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"vehicleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"inputName\\\">Name</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"inputName\\\" name=\\\"inputName\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"vehicle.name\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"inputDescription\\\">Description</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"inputDescription\\\" name=\\\"inputDescription\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"vehicle.description\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"inputPlate\\\">Plate</label>\\r\\n            <input class=\\\"form-control\\\" id=\\\"inputPlate\\\" name=\\\"inputPlate\\\" placeholder=\\\"Plate\\\" [(ngModel)]=\\\"vehicle.plate\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"inputVehicleType\\\">VehicleType</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"inputVehicleType\\\" name=\\\"inputPlate\\\" [(ngModel)]=\\\"vehicle.vehicleType\\\">\\r\\n              <option *ngFor=\\\"let type of vehicleTypes\\\" [ngValue]=\\\"type.id \\\">{{type.name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer \\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"cancelVehicle()\\\">Cancel</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=saveVehicle(vehicle)>Save</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from './app.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  vehicle = {};\r\n  vehicles = [];\r\n  vehicleType = {};\r\n  vehicleTypes = [];\r\n\r\n  constructor(private appService: AppService) { }\r\n\r\n  private updateData() {\r\n    this.appService.getAllVehicle().subscribe(response => {\r\n      if (response.ok) this.vehicles = response.json();\r\n    });\r\n    this.appService.getAllVehicleType().subscribe(response => {\r\n      if (response.ok) this.vehicleTypes = response.json();\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateData();\r\n  }\r\n\r\n  // Methods to work with vehicle\r\n\r\n  editVehicle(vehicle) {\r\n    this.appService.getOneVehicle(vehicle.id).subscribe(response => {\r\n      if (response.ok) this.vehicle = response.json();\r\n    })\r\n  }\r\n\r\n  saveVehicle(vehicle) {\r\n    this.appService.saveVehicle(vehicle).subscribe(response => {\r\n      if (response.ok) this.updateData();\r\n    })\r\n  }\r\n\r\n  deleteVehicle(vehicle) {\r\n    this.appService.deleteOneVehicle(vehicle.id).subscribe(response => {\r\n      if (response.ok) this.updateData();\r\n      this.cancelVehicle();\r\n    })\r\n  }\r\n\r\n  cancelVehicle() {\r\n    this.vehicle = {};\r\n  }\r\n\r\n  // Methods to work with vehicleType\r\n\r\n  editVehicleType(vehicleType) {\r\n    this.appService.getOneVehicleType(vehicleType.id).subscribe(response => {\r\n      if (response.ok) this.vehicleType = response.json();\r\n    })\r\n  }\r\n\r\n  saveVehicleType(vehicleType) {\r\n    this.appService.saveVehicleType(vehicleType).subscribe(response => {\r\n      if (response.ok) this.updateData();\r\n      this.cancelVehicleType();\r\n    })\r\n  }\r\n\r\n  deleteVehicleType(vehicleType) {\r\n    this.appService.deleteOneVehicleType(vehicleType.id).subscribe(response => {\r\n      if (response.ok) this.updateData();\r\n    })\r\n  }\r\n\r\n  cancelVehicleType() {\r\n    this.vehicleType = {};\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpModule } from '@angular/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { AppService } from \"./app.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule\r\n  ],\r\n  providers: [\r\n    AppService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/app/app.module.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http } from \"@angular/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n    private urlVehicle = \"http://ec2-18-188-109-114.us-east-2.compute.amazonaws.com:8080/vehicle\";\r\n    private urlVehicleType = \"http://ec2-18-188-109-114.us-east-2.compute.amazonaws.com:8080/vehicleType\";\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    // Methods to Vehicle\r\n\r\n    getAllVehicle(): Observable<any> {\r\n        return this.http.get(this.urlVehicle);\r\n    }\r\n\r\n    getOneVehicle(id): Observable<any> {\r\n        return this.http.get(this.urlVehicle + '/' + id);\r\n    }\r\n\r\n    saveVehicle(vehicle): Observable<any> {\r\n        return this.http.post(this.urlVehicle, vehicle);\r\n    }\r\n\r\n    deleteOneVehicle(id): Observable<any> {\r\n        return this.http.delete(this.urlVehicle + '/' + id);\r\n    }\r\n\r\n    // Methods to VehicleType\r\n\r\n    getAllVehicleType(): Observable<any> {\r\n        return this.http.get(this.urlVehicleType);\r\n    }\r\n\r\n    getOneVehicleType(id): Observable<any> {\r\n        return this.http.get(this.urlVehicleType + '/' + id);\r\n    }\r\n\r\n    saveVehicleType(vehicleType): Observable<any> {\r\n        return this.http.post(this.urlVehicleType, vehicleType);\r\n    }\r\n\r\n    deleteOneVehicleType(id): Observable<any> {\r\n        return this.http.delete(this.urlVehicleType + '/' + id);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/app/app.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/wesle/Documents/NetBeansProjects/Vehicle-FrontEnd/src/main.ts"],"sourceRoot":"webpack:///"}